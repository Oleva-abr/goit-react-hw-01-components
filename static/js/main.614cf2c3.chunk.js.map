{"version":3,"sources":["components/Profile/profile.module.css","components/Statistic/statistic.module.css","components/FriendList/friend.module.css","components/TransactionHistory/transaktions.module.css","components/Profile/Profole.jsx","components/Statistic/Statistic.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","width","label","quantity","followers","views","likes","getRandomColor","ran","Math","floor","random","Statistics","title","statistics","stat_list","map","stat","item","style","backgroundColor","percentage","id","FriendList","friends","friend_list","friend","isOnline","statusOnline","statusOffline","TransactionHistory","items","transaction_history","type","amount","currency","App","user","Statistic","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.614cf2c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__kIFWQ\",\"description\":\"profile_description__1rwti\",\"avatar\":\"profile_avatar__1OKAy\",\"name\":\"profile_name__f35ej\",\"tag\":\"profile_tag__NL_8Y\",\"location\":\"profile_location__7pHtb\",\"stats\":\"profile_stats__1sW7B\",\"label\":\"profile_label__c5Lzs\",\"quantity\":\"profile_quantity__1KSJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistic_statistics__2bEjW\",\"title\":\"statistic_title__AuAC4\",\"stat_list\":\"statistic_stat_list__1ThOI\",\"item\":\"statistic_item__3tjPZ\",\"label\":\"statistic_label__2jzjU\",\"percentage\":\"statistic_percentage__26zN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"friend_friend_list__jn0Ok\",\"item\":\"friend_item__oOY9n\",\"statusOnline\":\"friend_statusOnline__tCkeL\",\"statusOffline\":\"friend_statusOffline__3PnJF\",\"avatar\":\"friend_avatar__12UVI\",\"name\":\"friend_name__1dw4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transaktions_transaction_history__3DUSv\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={styles.avatar}\r\n        width=\"170\"\r\n      />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistic.module.css';\r\n\r\nfunction getRandomColor() {\r\n  const ran = function () {\r\n    return Math.floor(Math.random() * 256);\r\n  };\r\n  return 'rgb(' + ran() + ',' + ran() + ',' + ran() + ')';\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n\r\n    <ul className={styles.stat_list}>\r\n      {stats.map(stat => (\r\n        <li\r\n          className={styles.item}\r\n          key={stat.id}\r\n          style={{ backgroundColor: getRandomColor() }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friend.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friend_list}>\r\n    {friends.map(friend => (\r\n      <li className={styles.item} key={friend.id}>\r\n        <span\r\n          className={\r\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\r\n          }\r\n        ></span>\r\n        <img\r\n          className={styles.avatar}\r\n          src={friend.avatar}\r\n          alt={friend.name}\r\n          width=\"48\"\r\n        />\r\n        <p className={styles.name}>{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transaktions.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transaction_history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './Profile/Profole';\r\nimport Statistics from './Statistic/Statistic';\r\nimport FriendList from './FriendList/FriendList';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\n\r\nimport user from './Profile/user.json';\r\nimport statisticalData from './Statistic/statistic-data.json';\r\nimport friends from './FriendList/friends.json';\r\nimport transactions from './TransactionHistory/transactions.json';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />;\r\n    <FriendList friends={friends} />,\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}